material IronHellGoatAmmo {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			// La primera pasada del fragment shader calcula el ambiente. El resto de pasadas solo el difuso y el especular
			// ya que el ambiente solo es necesario  calcularlo  una vez.
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient				ambient_light_colour
				param_named_auto	lightAttenuation				light_attenuation							0
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	lightColor						light_diffuse_colour						0
				param_named_auto	spotLightParams			spotlight_params							0
				
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.2
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture IronHellGoatAmmo_Diffuse.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture IronHellGoatAmmo_normals.tga
			}
			
		}
	}
	
	technique {
		scheme depthScheme
		pass {
			lighting off
			vertex_program_ref depthMapVertex {
			}
			
			fragment_program_ref depthMapFragment {
			}
		}
	}
	
	technique {
		scheme blackScheme
		pass {
			lighting off
			vertex_program_ref blackVertex {
			}
			
			fragment_program_ref blackFragment {
			}
		}
	}
}