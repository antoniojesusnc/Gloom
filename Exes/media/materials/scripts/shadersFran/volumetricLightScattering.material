fragment_program volumetricLightFragment hlsl {
	source volumetricLightScattering.hlsl
	entry_point fragment_main
	target ps_2_0
}

material volumetricLightMaterial {
	technique {
		pass {
			lighting off
			depth_check off
		
			fragment_program_ref volumetricLightFragment {
				param_named			viewProjMatrix				matrix4x4		1 0 0 0	0 1 0 0	0 0 1 0	0 0 0 1
				param_named			lightPosition					float3			0 0 0
			
				// @todo
				// Hay que pasar la posicion de la luz y multiplicarla por la matriz world-view-projection
				// Hay que obtener dicha matriz previamente y pasarla como parametro uniforme
				// La posicion en la pantalla de un vertice es: vertice.xy / vertice.w 
				// vertice es el vertice proyectado pasado por el vertex shader
			}
		
			// Textura de post-procesado de la escena
			texture_unit SceneSampler {
				tex_address_mode clamp
				filtering linear linear none
				colour_op replace
			}
			
			texture_unit DepthMap {
				// DepthMap de la escena actual
			}
		}
	}
}
