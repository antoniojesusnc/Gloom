material mapaAlberto_blanco
{
	technique
	{
		pass
		{
			ambient 0.588 0.588 0.588 1
			diffuse 0.588 0.588 0.588 1
			specular 0 0 0 1 10
			scene_blend one one_minus_src_alpha

			texture_unit
			{
				texture blanco.tga
			}

			texture_unit
			{
				texture blanco.tga
				colour_op_ex add src_texture src_current
				colour_op_multipass_fallback one one
			}
		}

	}

}



material mapaAlberto_bronzecopper {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture BronzeCopper0030_L_COLOR3.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture BronzeCopper0030_L_NRM.tga
			}
			
		}
		
		pass {
		
			scene_blend add
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			1
				param_named_auto	lightDir							light_direction_object_space			1
				param_named_auto	spotLightParams			spotlight_params							1
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Parametros obtenidos de Ogre
				param_named_auto	lightAttenuation				light_attenuation							1
				param_named_auto	lightPosition					light_position_object_space			1
				param_named_auto	lightDir							light_direction_object_space			1
				param_named_auto	lightColor						light_diffuse_colour						1
				param_named_auto	spotLightParams			spotlight_params							1
				
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			//texture_unit DiffMap {
			//	texture BronzeCopper0030_L_COLOR3.jpg
			//}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			//texture_unit NormalMap {
			//	texture BronzeCopper0030_L_NRM.tga
			//}
			
		}
	}
	
}



material mapaAlberto_comluman {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture metal_columna_tileado_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture metal_columna_tileado_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_luces
{
	technique
	{
		pass
		{
			ambient 0.588 0.588 0.588 1
			diffuse 0.588 0.588 0.588 1
			specular 0 0 0 1 10
			scene_blend one one_minus_src_alpha

			texture_unit
			{
				texture luces1.tga
			}

			texture_unit
			{
				texture luces1.tga
				colour_op_ex add src_texture src_current
				colour_op_multipass_fallback one one
			}
		}

	}

}



material mapaAlberto_metalContainer {
	
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainer_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainer_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_metalContainer0149 {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainers0149_S_COLOR_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainers0149_S_COLOR_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_metalContainers {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainer_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainer_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_metalpuerta {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture metalpuerta_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture metalpuerta_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_mix {

	technique {
		pass {
			ambient 0.588 0.588 0.588 1
			diffuse 0.588 0.588 0.588 1
			specular 0 0 0 1 10
		}

	}

}



material mapaAlberto_piedra {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture piedra_COLOR2.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture piedra_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_suelo {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture suelo_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture suelo_NRM.tga
			}
			
		}
		
		pass {
		
			iteration once_per_light
		
			scene_blend add
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Parametros obtenidos de Ogre
				param_named_auto	lightAttenuation				light_attenuation							0
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	lightColor						light_diffuse_colour						0
				param_named_auto	spotLightParams			spotlight_params							0
				
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
		}
	}
	
}



material mapaAlberto_suelometal{

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture suelometal_COLOR2.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture suelometal_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_techometal {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture techometal_COLOR2.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture techometal_NRM_2.tga
			}
			
		}
	}
	
}



material mapaAlberto_ventana {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture ventana_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture ventana_NRM.tga
			}
			
		}
	}
	
}



material mapaAlberto_viga {
	
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture viga_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture viga_NRM.tga
			}
			
		}
	}
	
}



material metalContainer_metalContainer0036 {
	
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertexShader {
				// Parametros obtenidos de Ogre
				param_named_auto	viewProjectionMatrix 		worldviewproj_matrix
				param_named_auto	eyePosition					camera_position_object_space
				param_named_auto	lightPosition					light_position_object_space			0
				param_named_auto	lightDir							light_direction_object_space			0
				param_named_auto	spotLightParams			spotlight_params							0
			}
			
			fragment_program_ref bumpLightingFragmentShader {
				// Parametros obtenidos de Ogre
				param_named_auto	globalAmbient		ambient_light_colour
				param_named_auto	lightAttenuation		light_attenuation						0
				param_named_auto	lightPosition			light_position_object_space		0
				param_named_auto	lightDir					light_direction_object_space		0
				param_named_auto	lightColor				light_diffuse_colour					0
				param_named_auto	spotLightParams	spotlight_params						0
				
				// Constante para regular la cantidad de ambiente
				param_named	Ka							float		1.0
				// Constante para regular la cantidad de difuso
				param_named	Kd							float		0.6
				// Constante de brillo especular
				param_named 	shininess					float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainers0036_S_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainers0036_S_NRM.tga
			}
			
		}
	}
	
}