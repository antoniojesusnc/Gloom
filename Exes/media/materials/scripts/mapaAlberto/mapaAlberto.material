material mapaAlberto_blanco
{
	technique
	{
		pass
		{
			ambient 0.588 0.588 0.588 1
			diffuse 0.588 0.588 0.588 1
			specular 0 0 0 1 10
			scene_blend one one_minus_src_alpha

			texture_unit
			{
				texture blanco.tga
			}

			texture_unit
			{
				texture blanco.tga
				colour_op_ex add src_texture src_current
				colour_op_multipass_fallback one one
			}
		}

	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_bronzecopper {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture BronzeCopper0030_L_COLOR3.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture BronzeCopper0030_L_COLOR3.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture BronzeCopper0030_L_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture BronzeCopper0030_L_SPEC.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_comluman {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture metal_columna_tileado_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture metal_columna_tileado_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture metal_columna_tileado_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture metal_columna_tileado_SPEC.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_luces
{
	technique
	{
		pass
		{
			ambient 0.588 0.588 0.588 1
			diffuse 0.588 0.588 0.588 1
			specular 0 0 0 1 10
			scene_blend one one_minus_src_alpha

			texture_unit
			{
				texture luces1.tga
			}

			texture_unit
			{
				texture luces1.tga
				colour_op_ex add src_texture src_current
				colour_op_multipass_fallback one one
			}
		}

	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_metalContainer {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainer_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainer_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainer_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture MetalContainer_SPEC.tga
			}
			
		}
	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}	
}



material mapaAlberto_metalContainer0149 {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainers0149_S_COLOR_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainers0149_S_COLOR_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainers0149_S_COLOR_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture MetalContainers0149_S_COLOR_SPEC.tga
			}
			
		}
	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_metalContainers {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainer_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainer_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainer_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture MetalContainer_SPEC.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_metalpuerta {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture metalpuerta_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture metalpuerta_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture metalpuerta_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture metalpuerta_SPEC.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_mix {

	technique {
		pass {
			ambient 0.588 0.588 0.588 1
			diffuse 0.588 0.588 0.588 1
			specular 0 0 0 1 10
		}

	}

}


material mapaAlberto_piedra {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture piedra_COLOR2.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture piedra_COLOR2.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture piedra_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture piedra_SPEC.tga
			}
			
		}
	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_suelo {

	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture suelo_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture suelo_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture suelo_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture suelo_SPEC.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_suelometal{
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture suelometal_COLOR2.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture suelometal_COLOR2.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture suelometal_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture suelometal_SPEC.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_techometal {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture techometal_COLOR2.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture techometal_COLOR2.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture techometal_NRM_2.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture techometal_SPEC_2.tga
			}
			
		}
	}
	
	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material mapaAlberto_ventana {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture ventana_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture ventana_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture ventana_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture ventana_SPEC.tga
			}
			
		}
	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}	
}



material mapaAlberto_viga {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture viga_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture viga_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture viga_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture viga_SPEC.tga
			}
			
		}
	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}



material metalContainer_metalContainer0036 {
	technique {
		pass {
		
			vertex_program_ref bumpLightingVertex_AMB {
			}
		
			fragment_program_ref bumpLightingFragment_AMB {
				// Constante para regular la cantidad de ambiente
				param_named			Ka								float		0.6
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainers0036_S_COLOR.tga
			}
			
		}
		
		pass {
		
			scene_blend add
			iteration once_per_light
		
			vertex_program_ref bumpLightingVertexShader {
			}
			
			fragment_program_ref bumpLightingFragment_DIFF_SPEC {
				// Constante para regular la cantidad de difuso
				param_named			Kd								float		0.6
				// Constante de brillo especular
				param_named 			shininess						float		70.0
			}
			
			// Textura de difuso
			texture_unit DiffMap {
				texture MetalContainers0036_S_COLOR.tga
			}
			
			// Textura para el bump mapping. En el alfa esta el mapa de especulares.
			texture_unit NormalMap {
				texture MetalContainers0036_S_NRM.tga
			}
			
			// Textura de especular
			texture_unit SpecMap {
				texture MetalContainers0036_S_SPEC.tga
			}
			
		}
	}

	technique
	{
		scheme depthScheme
		pass
		{
			vertex_program_ref depthMapVertex
			{
			}
			fragment_program_ref depthMapFragment
			{
			}
		}
	}
}