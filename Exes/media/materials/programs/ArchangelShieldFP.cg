float strength;

sampler screenSampler: register(s0);
sampler shieldSampler: register(s1);

struct PsInput
{
	float2 uv0 : TEXCOORD0;
	float2 uv1: TEXCOORD1;
	
	
};



float4 shield_ps(const PsInput psIn) : COLOR {

	float4 imageColor = 0;
	float4 screen;
	float4 tempShield;
	float4 shield;
	
	// obtengo la imagen de la pantalla
	screen = tex2D(screenSampler, psIn.uv0);
	
	//obtengo la textura del escudo
	tempShield = tex2D(shieldSampler, psIn.uv0);
	
	//clacula la distancia al centro.
	float2 dir = 0.5 - psIn.uv0;
	// obtengo la distancia la pantalla, exagero el valor con un *2
	float dist = sqrt( dir.x*dir.x + dir.y*dir.y )*2;
	
	float aux = (1-(dist-0.3))*strength;
	
	// saturo para obtener un valor entre 0 y 1
	//saturate(aux);
	//MENTIRA!! el saturate no me devuelve el valor entre 0 y 1, me da otros valores.
	float miSaturate = max(0.0, min(aux,1.0));
	
	//asi que me hago lo del minimo para que sea 1 como mucho.
	shield = lerp(tempShield, float4(1,1,1,0), miSaturate);
	
	// Aqui mezclo ambas imagenes
	imageColor = screen * shield;

	return imageColor;
}

